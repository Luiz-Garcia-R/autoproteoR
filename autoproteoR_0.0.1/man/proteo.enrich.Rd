% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoenrich.R
\name{proteo.enrich}
\alias{proteo.enrich}
\title{Perform GO enrichment analysis for proteomics data}
\usage{
proteo.enrich(
  normalized_data,
  ont = "BP",
  results = FALSE,
  min_genes = 3,
  db = c("hs", "mm"),
  show_plot = TRUE,
  p_adjust_cutoff = 0.05,
  proteins = "all",
  help = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{normalized_data}{A proteomics object containing a \code{presence_per_group} element
or a data.frame with a \code{ProteinID} column.}

\item{ont}{Character. Ontology category for GO analysis: \code{"BP"} (Biological Process),
\code{"MF"} (Molecular Function), or \code{"CC"} (Cellular Component). Default = \code{"BP"}.}

\item{results}{Logical. If TRUE, returns a list with enrichment results and proteins used. Default = FALSE.}

\item{min_genes}{Minimum number of proteins required in a group to perform enrichment. Default = 3.}

\item{db}{Character. Organism database: \code{"hs"} (human, default) or \code{"mm"} (mouse).}

\item{show_plot}{Logical. If TRUE (default), shows dotplots for each group with significant GO terms.}

\item{p_adjust_cutoff}{Numeric. FDR threshold for filtering GO terms. Default = 0.05.}

\item{proteins}{Character. Which proteins to use per group: \code{"all"} (default) or \code{"unique"}.}

\item{help}{Logical. If TRUE, prints this help message and example usage. Default = FALSE.}

\item{verbose}{Logical. If TRUE (default), prints messages about progress.}
}
\value{
If \code{results = TRUE}, returns a list with:
\describe{
\item{ego_list}{List of \code{enrichResult} objects per group.}
\item{proteins_used}{List of proteins used for enrichment per group.}
}
Otherwise, prints messages and optionally plots dotplots. Invisibly returns \code{NULL}.
}
\description{
Performs Gene Ontology (GO) enrichment analysis on proteomics data,
using either all detected proteins per group or only the unique proteins.
Supports human and mouse organisms and returns enriched GO terms with optional plots.
}
\examples{
\dontrun{
# Small example: real human protein IDs
raw_data <- data.frame(
  ProteinID = c("P31946", "P62258", "P63104", "Q9Y262", "P62993"),
  Control_1  = c(1,1,0,1,0),
  Control_2  = c(1,1,0,1,0),
  Treatment_1 = c(0,1,1,1,1),
  Treatment_2 = c(0,1,1,1,1)
)

metadata <- data.frame(
  Sample = c('Control_1','Control_2','Treatment_1','Treatment_2'),
  Group  = c('Control','Control','Treatment','Treatment')
)

# Step 1: Normalize data
normalized_obj <- proteo.normalize(raw_data, metadata)

# Step 2: Run enrichment (min_genes = 1 for small example)
proteo.enrich(normalized_obj, min_genes = 1)
res <- proteo.enrich(normalized_obj, results = TRUE, min_genes = 1)
}

}
\references{
Yu et al. 2012. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS 16:284-287. \url{doi:10.1089/omi.2011.0118}
}
