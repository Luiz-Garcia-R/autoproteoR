% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteonormalize.R
\name{proteo.normalize}
\alias{proteo.normalize}
\title{Normalize Proteomics Data}
\usage{
proteo.normalize(
  raw_data,
  metadata,
  method = "log2",
  remove_zeros = FALSE,
  remove_outliers = TRUE,
  impute = TRUE,
  impute_shift = 1.8,
  impute_scale = 0.3,
  max_missing_prop_per_group = 0.5,
  pseudo_count = 1e-06,
  clip_negative_log = TRUE,
  assign_result = TRUE,
  assign_name = "normalized_data",
  envir = parent.frame(),
  help = FALSE
)
}
\arguments{
\item{raw_data}{A \code{data.frame} with protein abundances. Must contain a column with
protein IDs (e.g., "ProteinID") and columns corresponding to sample names.}

\item{metadata}{A \code{data.frame} with sample metadata. Must contain columns for
sample names and group/condition labels.}

\item{method}{Character. Normalization method. Options: \code{"log2"} (default), \code{"log10"}, or \code{"none"}.}

\item{remove_zeros}{Logical. Whether to remove proteins with zero values in all samples. Default: \code{FALSE}.}

\item{remove_outliers}{Logical. Whether to replace extreme values with \code{NA}. Default: \code{TRUE}.}

\item{impute}{Logical. Whether to perform global imputation for missing/zero values. Default: \code{TRUE}.}

\item{impute_shift}{Numeric. Shift factor for global imputation mean. Default: 1.8.}

\item{impute_scale}{Numeric. Scale factor for global imputation standard deviation. Default: 0.3.}

\item{max_missing_prop_per_group}{Numeric. Maximum proportion of missing/zero values allowed per group. Default: 0.5.}

\item{pseudo_count}{Numeric. Small value added before log transformation. Default: 1e-6.}

\item{clip_negative_log}{Logical. Whether to set negative values to 0 after log transformation. Default: \code{TRUE}.}

\item{assign_result}{Logical. Whether to assign the resulting \code{proteoNorm} object in the calling environment. Default: \code{TRUE}.}

\item{assign_name}{Character. Name to assign the resulting object. Default: \code{"normalized_data"}.}

\item{envir}{Environment in which to assign the result if \code{assign_result = TRUE}. Default: parent.frame().}

\item{help}{Logical. If TRUE, prints this help message and example usage. Default = FALSE.}
}
\value{
An object of class \code{proteoNorm}, which is a list containing:
\itemize{
\item \code{<method>_normalized}: Normalized data.frame with \code{ProteinID} and samples.
\item \code{raw_preserved}: Original raw data for reference.
\item \code{presence_per_group}: Matrix indicating protein presence/absence per group.
\item \code{method}: Normalization method used.
\item \code{checks}: List of checks and actions applied during normalization.
}
}
\description{
Performs normalization on raw proteomics abundance data. Supports log transformation,
optional outlier removal, global imputation for missing values, and filtering
proteins with excessive missing values per group.
}
\examples{
raw_data <- data.frame(
  ProteinID = c("P1", "P2", "P3", "P4"),
  Control_1 = c(1.2e6, 0, 5e5, 2e5),
  Control_2 = c(1.1e6, 0, 4.8e5, 2.2e5),
  Treatment_1 = c(0.9e6, 0, 5.2e5, 1.8e5),
  Treatment_2 = c(1.0e6, 0, 5.1e5, 2.0e5)
)
metadata <- data.frame(
  Sample = c("Control_1", "Control_2", "Treatment_1", "Treatment_2"),
  Group = c("Control", "Control", "Treatment", "Treatment")
)
normalized_data <- proteo.normalize(raw_data, metadata)
str(normalized_data)

}
\references{
Pearson, K. 1901. On lines and planes of closest fit to systems of points in space.
\emph{Philosophical Magazine} 2(11): 559â€“572. \url{doi:10.1080/14786440109462720}
}
